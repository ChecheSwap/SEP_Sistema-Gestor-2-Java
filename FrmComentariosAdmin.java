/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sep;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JJ.NAVARRETE
 */
public class FrmComentariosAdmin extends javax.swing.JFrame {

    String todos;
    String pendientes;
    String atendidos;
    public static FrmComentariosAdmin instancia;

    /**
     * Creates new form FrmComentariosAdmin
     */
    public FrmComentariosAdmin() {
        initComponents();
        instancia = this;
        jComboBoxEstado.setSelectedIndex(0);

        jTableComentarios.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent me) {
                JTable table = (JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                int col = table.columnAtPoint(p);
                if (me.getClickCount() == 2) {
                    try {
                        enviarDatos(row, col);
                    } catch (MyExcepcion ex) {

                    }
                }
            }

        });
    }

    public synchronized void enviarDatos(int row, int col) throws MyExcepcion {

        String comentarioVer = jTableComentarios.getValueAt(row, 9).toString();
        String id = jTableComentarios.getValueAt(row, 0).toString();
        String estado = jTableComentarios.getValueAt(row, 10).toString();
        String seleccion = jComboBoxEstado.getSelectedItem().toString();
        FrmVerComentario comentario = new FrmVerComentario(comentarioVer, id, estado, seleccion);
        comentario.setLocationRelativeTo(null);
        comentario.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableComentarios = new javax.swing.JTable();
        jLabelFiltro = new javax.swing.JLabel();
        jComboBoxEstado = new javax.swing.JComboBox();
        jLabelLogo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Panel de Admnistracion de Comentarios");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Comentarios"));

        jTableComentarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fecha", "Nombre", "Apellido Paterno", "Apellido Materno", "Curp", "Email", "Subsistema", "Plantel", "Comentario", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableComentarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableComentarios);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        jLabelFiltro.setText("Filtro:");

        jComboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Pendientes", "Atendidos" }));
        jComboBoxEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEstadoActionPerformed(evt);
            }
        });

        jLabelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logoSEP.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabelFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelLogo)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelFiltro)
                            .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabelLogo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEstadoActionPerformed
        String estado = jComboBoxEstado.getSelectedItem().toString();
        BD bd = new BD();
        DefaultTableModel model = (DefaultTableModel) jTableComentarios.getModel();

        model.getDataVector().removeAllElements();
        switch (estado) {
            case "Todos":
                model.getDataVector().removeAllElements();
                List<Comentarios> listaComentariosTodos = bd.cargarComentarios("todos");

                if (!listaComentariosTodos.isEmpty()) {
                    for (Comentarios c : listaComentariosTodos) {
                        model.addRow(new Object[]{
                            c.id,
                            c.fecha,
                            c.nombre,
                            c.apellidoP,
                            c.apellidoM,
                            c.curp,
                            c.email,
                            c.subsistema,                            
                            c.plantel,
                            c.comentario,
                            c.estado,});
                    }
                    model.fireTableDataChanged();
                } else {
                    JOptionPane.showMessageDialog(this, "No hay Comentarios", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }

                break;

            case "Pendientes":

                List<Comentarios> listaComentariosPendientes = bd.cargarComentarios("pendientes");

                if (!listaComentariosPendientes.isEmpty()) {
                    for (Comentarios c : listaComentariosPendientes) {
                        model.addRow(new Object[]{
                            c.fecha,
                            c.nombre,
                            c.apellidoP,
                            c.apellidoM,
                            c.curp,
                            c.email,
                            c.subsistema,
                            c.nombre,
                            c.plantel,
                            c.comentario,
                            c.estado,});
                    }
                    model.fireTableDataChanged();
                } else {
                    JOptionPane.showMessageDialog(this, "No hay Comentarios", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
                break;

            case "Atendidos":
                model.getDataVector().removeAllElements();
                List<Comentarios> listaComentariosAtendidos = bd.cargarComentarios("atendidos");

                if (!listaComentariosAtendidos.isEmpty()) {
                    for (Comentarios c : listaComentariosAtendidos) {
                        model.addRow(new Object[]{
                            c.fecha,
                            c.nombre,
                            c.apellidoP,
                            c.apellidoM,
                            c.curp,
                            c.email,
                            c.subsistema,
                            c.nombre,
                            c.plantel,
                            c.comentario,
                            c.estado,});
                    }
                    model.fireTableDataChanged();
                } else {
                    JOptionPane.showMessageDialog(this, "No hay Comentarios", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
                break;
        }

    }//GEN-LAST:event_jComboBoxEstadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmComentariosAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmComentariosAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmComentariosAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmComentariosAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmComentariosAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox jComboBoxEstado;
    private javax.swing.JLabel jLabelFiltro;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableComentarios;
    // End of variables declaration//GEN-END:variables
}
